@model IEnumerable<CS470_Project.Models.Book>

@{
    Layout = null;
}

@{
    List<CS470_Project.Models.Book> books = ViewData["Books"] as List<CS470_Project.Models.Book>;
    string role = (string)ViewData["UserRole"];
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    
    @if (role.Contains("Admin"))
    {
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }
    <div id="button-container">

        <div id="button-container-left">
            <form id="search-form" action="/Books/Index" method="get">
                <input type="text" id="search-input" name="searchString" placeholder="search..." autocomplete="off" />
                <input type="submit" id="search-button" class="button left-button" value="SEARCH" />
            </form>
        </div>
    </div>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("TITLE", "Index", new { sortOrder = "title", searchString = ViewBag.CurrentFilter })
            </th>

            <th>
                @Html.ActionLink("DESCRIPTION", "Index", new { sortOrder = "description", searchString = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("YEAR", "Index", new { sortOrder = "year", searchString = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("RATING", "Index", new { sortOrder = "rating", searchString = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("PAGES", "Index", new { sortOrder = "NumPages", searchString = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("PUBLISHER ID", "Index", new { sortOrder = "PublisherId", searchString = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("GENRE ID", "Index", new { sortOrder = "GenreId", searchString = ViewBag.CurrentFilter })
            </th>
            <th></th>
        </tr>

        @foreach (var item in books)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Yr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumPages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublisherID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GenreID)
                </td>
                @if (role.Contains("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ISBN }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ISBN }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ISBN })
                    </td>
                }
            </tr>
        }

    </table>
</body>
</html>
